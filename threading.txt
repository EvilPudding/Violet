Multi-threaded:

 - Each component type / system is assigned a thread at start-up through the config file.
 - 3 phases of tasks: read, write, and delete.
 - Tasks during the read phase should not modify data and can read data that is assigned to any thread.
 - Tasks after the read phase can only read/write data on the thread they're assigned to.
 - Components should not be captured by ref/pointer since they are not guaranteed to be in the same location by the time a task runs.
 - Components are however guaranteed to exists by the time a write task is run - they should only be removed in the delete phase.
 - The scene is be guaranteed to stay alive until all tasks are complete for the frame.

Single-threaded:

 - The code is mostly setup to allow single-threaded mode for ease of use (scene views are currently read-only).
 - Component creation and deletion needs to be deferred to avoid invalidating component pool iterators.
